"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var ReactDOM = require("react-dom");
var ReactPPT_1 = require("./ReactPPT");
require("./index.less");
var Wrapper = (function (_super) {
    __extends(Wrapper, _super);
    function Wrapper() {
        return _super.apply(this, arguments) || this;
    }
    Wrapper.prototype.render = function () {
        return React.createElement("div", { className: "wrapper" },
            React.createElement("div", { className: "header" }, this.props.header),
            this.props.children,
            React.createElement("footer", null, "\u5415\u797A|\u57FA\u4E8E\u6DF1\u5EA6\u5B66\u4E60\u7684\u65F6\u95F4\u5E8F\u5217\u5EFA\u6A21"));
    };
    return Wrapper;
}(React.Component));
var divs = [
    React.createElement("div", { key: 1, className: "wrapper" },
        React.createElement("div", { className: "title" }, "\u57FA\u4E8E\u6DF1\u5EA6\u5B66\u4E60\u7684\u65F6\u95F4\u5E8F\u5217\u5EFA\u6A21"),
        React.createElement("div", { className: "body" },
            "\u6E05\u534E\u5927\u5B66\u5DE5\u7A0B\u7855\u58EB\u6BD5\u4E1A\u8BBA\u6587\u7B54\u8FA9",
            React.createElement("br", null),
            React.createElement("h2", null, "\u5415\u797A"),
            React.createElement("br", null),
            React.createElement("br", null),
            "\u6E05\u534E\u5927\u5B66-\u9999\u6E2F\u4E2D\u6587\u5927\u5B66\u5A92\u4F53\u79D1\u5B66\u6280\u672F\u4E0E\u7CFB\u7EDF\u8054\u5408\u7814\u7A76\u4E2D\u5FC3",
            React.createElement("br", null),
            "\u6E05\u534E\u5927\u5B66\u4FE1\u606F\u79D1\u5B66\u4E0E\u6280\u672F\u56FD\u5BB6\u5B9E\u9A8C\u5BA4",
            React.createElement("br", null),
            "2016\u5E7412\u6708",
            React.createElement("br", null))),
    React.createElement(Wrapper, { key: 2, header: "提纲" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["研究意义", "研究现状", "研究内容和方法", "主要研究内容"] },
                React.createElement(ReactPPT_1.Lists, { lists: ["长时短时记忆模型优化",
                        "LSTM-RTRBM模型"] })),
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["研究成果"] }))),
    React.createElement(Wrapper, { count: 3, key: 3, header: "研究意义" },
        React.createElement("ul", { className: "list" },
            React.createElement("li", null, "\u6DF1\u5EA6\u795E\u7ECF\u7F51\u7EDC\u7684\u53D1\u660E\uFF0C\u5355\u4E00\u65F6\u95F4\u70B9\u7684\u5EFA\u6A21\u80FD\u529B\u5F97\u5230\u7A81\u98DE\u731B\u8FDB\u7684\u8FDB\u6B65"),
            React.createElement(ReactPPT_1.Frame3, { order: [1, 2], animate: { animation: "transition.perspectiveLeftIn", duration: 500, stagger: 400 }, animateOut: { animation: "transition.perspectiveRightOut", duration: 100, stagger: 100 } },
                React.createElement("img", { src: "../lib/app/static/hinton.jpg", style: { width: '40%' } }),
                React.createElement("img", { src: "../lib/app/static/DeepNetwork.png", style: { width: '40%' } })),
            React.createElement(ReactPPT_1.Frame3, { order: 2, animate: { animation: "transition.slideUpBigIn", duration: 500 } },
                React.createElement("li", null, "\u5355\u53E5\u8BED\u97F3\u8BC6\u522B\uFF0C\u89C6\u9891\u6355\u6349\u7B49\u65B9\u9762\u7684\u6548\u679C\u4E5F\u4F9D\u6B64\u5F97\u5230\u8FDB\u6B65")),
            React.createElement(ReactPPT_1.Frame3, { order: 3, animate: { animation: "transition.slideUpBigIn", duration: 500 } },
                React.createElement("li", null, "\u7136\u800C\u5728\u5E8F\u5217\u6A21\u578B\u4E0A\uFF0C\u7F3A\u4E4F\u76F8\u5E94\u7684\u63D0\u5347\uFF0C\u5BFC\u81F4\u8BED\u97F3\u8BC6\u522B\u6CA1\u6709\u4E0A\u4E0B\u6587\u7406\u89E3\u80FD\u529B\uFF0C" + " " + "\u81EA\u7136\u8BED\u8A00\u5904\u7406\u4E5F\u6CA1\u6709\u8D77\u8272")))),
    React.createElement(Wrapper, { count: 1, key: 3, header: " " },
        React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500 } },
            React.createElement("img", { style: { position: 'absolute', left: "0%", top: "1%" }, src: "../lib/app/static/xiaobing.jpg" })),
        React.createElement(ReactPPT_1.Frame3, { order: 1, animate: { animation: "transition.bounceUpIn", duration: 500 } },
            React.createElement("img", { style: { position: 'absolute', left: "50%", top: "15%" }, src: "../lib/app/static/xiaohuangji2.jpg" }))),
    React.createElement(Wrapper, { count: 4, key: 4, header: "研究意义" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 1, animate: { animation: "transition.bounceUpIn", duration: 500 } },
                React.createElement(ReactPPT_1.Lists, { header: true, className: "ul", lists: ["深度学习的兴起"] })),
            React.createElement(ReactPPT_1.Frame3, { order: 2, animate: { animation: "transition.bounceUpIn", duration: 500 } },
                React.createElement(ReactPPT_1.Lists, { header: true, className: "ul", lists: ["序列建模"] }),
                React.createElement(ReactPPT_1.Frame3, { order: [3, 4], animate: { animation: "transition.bounceUpIn", duration: 200, stagger: 100 }, animateOut: { animation: "transition.bounceUpOut", duration: 200 } },
                    React.createElement("li", null, "\u8BED\u97F3\u8BC6\u522B"),
                    React.createElement("li", null, "\u8BED\u97F3\u5408\u6210"),
                    React.createElement("li", null, "\u89C6\u9891\u8DDF\u8E2A"),
                    React.createElement("li", null, "\u89C6\u9891\u7406\u89E3"))))),
    React.createElement(Wrapper, { key: 5, header: "研究现状" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement("li", null, "\u9690\u9A6C\u5C14\u79D1\u592B\u94FE"),
                React.createElement("li", null, "\u666E\u901A\u9012\u5F52\u795E\u7ECF\u7F51\u7EDCRNN"),
                React.createElement("li", null, "\u56DE\u58F0\u72B6\u6001\u7F51\u7EDC"),
                React.createElement("li", null, "\u9012\u5F52\u65F6\u5E8F\u73BB\u5C14\u5179\u66FC\u673A"),
                React.createElement("li", null, "\u957F\u65F6\u77ED\u65F6\u8BB0\u5FC6\u7F51\u7EDC"),
                React.createElement("li", null, "Hessian Free\u4F18\u5316")))),
    React.createElement(Wrapper, { count: 2, key: 6, header: "研究现状" },
        React.createElement(ReactPPT_1.Frame3, { order: [1, 2] },
            React.createElement("img", { style: { position: 'absolute', left: 0, bottom: 0, width: '100%', background: "white", zIndex: 100 }, src: "../lib/app/static/hmm.jpg" })),
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement(ReactPPT_1.Lists, { header: true, className: "ul", lists: ["隐马尔科夫链"] }),
                React.createElement(ReactPPT_1.Frame3, { order: 2, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                    React.createElement("li", null, "\u7406\u8BBA\u5B8C\u5907\uFF0C\u5DE5\u5177\u94FE\u5B8C\u5584"),
                    React.createElement("li", null, "\u79BB\u6563\u72B6\u6001 GMM"),
                    React.createElement("li", null, "\u72B6\u6001\u6570\u91CF\u6709\u9650 \u8F6C\u79FB\u77E9\u9635"),
                    React.createElement("li", null, "\u65F6\u95F4\u5E8F\u5217\u957F\u5EA6\u4F9D\u8D56\u6709\u9650"))))),
    React.createElement(Wrapper, { count: 1, key: 7, header: "研究现状" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement(ReactPPT_1.Lists, { header: true, lists: ["普通递归神经网络RNN"] }),
                React.createElement("li", null, "\u80FD\u5145\u5206\u5229\u7528\u65F6\u5E8F\u4FE1\u606F\uFF0C\u5177\u6709\u50A8\u5B58\u8BB0\u5FC6\u80FD\u529B"),
                React.createElement("li", null, "\u96BE\u4EE5\u8BAD\u7EC3\uFF0C\u53CD\u5411\u4F20\u64AD\u968F\u65F6\u95F4\u5C55\u5F00\u5BFC\u81F4\u68AF\u5EA6\u7206\u70B8"),
                React.createElement("li", null, "\u6A21\u578B\u8FC7\u4E8E\u7B80\u5355\uFF0C\u5EFA\u6A21\u80FD\u529B\u6709\u9650"),
                React.createElement("li", null, "Hessian Free\u4F18\u5316 \u80FD\u4E00\u5B9A\u7A0B\u5EA6\u7F13\u89E3\u95EE\u9898\uFF0C\u4F46\u4E0D\u80FD\u89E3\u51B3\u6A21\u578B\u672C\u8EAB\u7684\u7F3A\u9677")),
            React.createElement(ReactPPT_1.Frame3, { order: 1, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement(ReactPPT_1.Lists, { header: true, lists: ["回声状态网络ESN"] }),
                React.createElement("li", null, "\u80FD\u907F\u514D\u68AF\u5EA6\u7206\u70B8\u95EE\u9898"),
                React.createElement("li", null, "\u7F51\u7EDC\u8FDE\u63A5\u6743\u91CD\u9884\u8BBE\uFF0C\u5982\u4F55\u8BBE\u7F6E\u6CA1\u6709\u5B9A\u8BBA"),
                React.createElement("li", null, "\u6CDB\u5316\u80FD\u529B\u5F31")))),
    React.createElement(Wrapper, { count: 1, key: 8, header: "研究现状" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement(ReactPPT_1.Lists, { header: true, lists: ["递归时序玻尔兹曼机"] }),
                React.createElement("li", null, "\u5229\u7528\u73BB\u5C14\u5179\u66FC\u673A\u7684\u5EFA\u6A21\u80FD\u529B\uFF0C\u5355\u4E00\u65F6\u95F4\u6B65\u5EFA\u6A21\u80FD\u529B\u5F3A"),
                React.createElement("li", null, "\u5229\u7528\u9012\u5F52\u94FE\u63A5\uFF0C\u5177\u6709\u50A8\u5B58\u8BB0\u5FC6\u80FD\u529B"),
                React.createElement("li", null, "\u957F\u65F6\u8BB0\u5FC6\u80FD\u529B\u4E0D\u8DB3"),
                React.createElement("li", null, "\u4ECD\u7136\u5B58\u5728\u68AF\u5EA6\u7206\u70B8\u95EE\u9898\uFF0C\u96BE\u4EE5\u8BAD\u7EC3")))),
    React.createElement(Wrapper, { count: 1, key: 9, header: "研究现状" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Frame3, { order: 0, animate: { animation: "transition.bounceUpIn", duration: 500, stagger: 200 } },
                React.createElement(ReactPPT_1.Lists, { header: true, lists: ["长时短时记忆模型"] }),
                React.createElement("li", null, "\u5177\u6709\u957F\u65F6\u8BB0\u5FC6\u80FD\u529B\uFF0C\u80FD\u5904\u7406\u957F\u5E8F\u5217\u7684\u65F6\u95F4\u4F9D\u8D56\u5173\u7CFB"),
                React.createElement("li", null, "\u6CA1\u6709\u68AF\u5EA6\u7206\u70B8\u95EE\u9898"),
                React.createElement("li", null, "\u5355\u4E00\u65F6\u95F4\u6B65\u5EFA\u6A21\u80FD\u529B\u5F31")))),
    React.createElement(Wrapper, { key: 10, header: "研究内容和方法" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["通过再现之前的研究结果，找出之前模型的局限所在",
                    "对结果进行分析，得到提升模型训练速度和能力的空间",
                    "从模型本身的结构，以及训练算法的并行度上进行改进"] }))),
    React.createElement(Wrapper, { key: 11, header: "长时短时记忆模型" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["简介", "结构", "训练方法", "优化"] }))),
    React.createElement(Wrapper, { key: 12, header: "长时短时记忆模型" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["简介"] }),
            React.createElement("li", null,
                "\u80FD\u591F\u4ECE\u8F93\u5165\u6D41\u4E2D\u83B7\u53D6\u548C",
                React.createElement("strong", null, "\u50A8\u5B58"),
                "\u4FE1\u606F\uFF0C\u5E76\u6839\u636E\u8FD9\u4E9B\u4FE1\u606F\u89E3\u51B3\u7C7B\u4F3C\u5206\u7C7B\uFF0C\u5904\u7406\uFF0C\u9884\u6D4B\u7B49\u590D\u6742\u7684\u4EFB\u52A1"),
            React.createElement("li", null, "\u6027\u80FD\u4E0A\u4F18\u4E8E\u5176\u4ED6\u5E8F\u5217\u5B66\u4E60\u65B9\u6CD5\uFF0C\u5728\u8BED\u97F3\u8BC6\u522B\uFF0C\u624B\u5199\u4F53\u8BC6\u522B\u7B49\u9886\u57DF\u7684\u51C6\u786E\u7387\u957F\u671F\u4FDD\u6301\u9886\u5148"))),
    React.createElement(Wrapper, { key: 13, header: "长时短时记忆模型" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["结构"] })),
        React.createElement("img", { src: '../lib/app/static/lstm.png' })),
    React.createElement(Wrapper, { key: 14, count: 4, header: "长时短时记忆模型" },
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 1 },
            React.createElement("img", { src: '../lib/app/static/bptt.png', style: { position: 'absolute', left: '50%', top: '30%', width: '50%' } })),
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["优化1 -- 训练方法"] }),
            React.createElement("li", null, "\u5B8C\u5168\u68AF\u5EA6BPTT"),
            React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 2 },
                React.createElement("li", null, "RMS-props")),
            React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 3 },
                React.createElement("li", null, "\u622A\u65AD\u68AF\u5EA6BPTT")),
            React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 4 },
                React.createElement("li", null,
                    React.createElement("strong", { style: { color: 'red' } }, "\u6279\u8BAD\u7EC3\u622A\u65AD\u68AF\u5EA6BPTT"))))),
    React.createElement(Wrapper, { key: 15, header: "优化1 -- 训练方法 实验" },
        React.createElement("ul", { className: "list" },
            React.createElement("li", null, "\u6279\u5904\u7406\u4E0E\u9010\u4E00\u5904\u7406(\u4E58\u6CD5\u4EFB\u52A1)"),
            React.createElement("img", { src: "../lib/app/static/batchTime.png" }))),
    React.createElement(Wrapper, { key: 16, header: "优化1 -- 训练方法 实验" },
        React.createElement("ul", { className: "list" },
            React.createElement("li", null, "\u4F7F\u7528\u4E0D\u540C\u6279\u5927\u5C0F\u7684\u6279\u5904\u7406\u8BAD\u7EC3\u5B66\u4E60\u6536\u655B\u901F\u5EA6(\u4E58\u6CD5\u4EFB\u52A1)"),
            React.createElement("img", { src: "../lib/app/static/batch.png" }))),
    React.createElement(Wrapper, { key: 17, header: "优化2 -- 优化算法" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["一阶算法"] },
                React.createElement("li", null, "\u6700\u901F\u4E0B\u964D\u7B97\u6CD5"),
                React.createElement("li", null, "momentum \u51B2\u91CF\u7B97\u6CD5")))),
    React.createElement(Wrapper, { key: 18, header: "优化2 -- 优化算法" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["二阶算法"] },
                React.createElement("li", null, "LBFGS \u62DF\u725B\u987F\u7B97\u6CD5"),
                React.createElement("li", null, "CG \u5171\u8F6D\u68AF\u5EA6\u7B97\u6CD5 ")))),
    React.createElement(Wrapper, { key: 19, header: "优化2 -- 优化算法 实验" },
        React.createElement("img", { src: "../lib/app/static/lbfgs.png" })),
    React.createElement(Wrapper, { key: 20, count: 3, header: "优化3 -- 门函数激励函数" },
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, animateOut: { animation: "transition.bounceUpOut" }, order: [1, 2] },
            React.createElement("img", { src: "../lib/app/static/Sigmoid.png" })),
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 3 },
            React.createElement("ul", { className: "list" },
                React.createElement("li", null, "\u62E5\u6709\u4E0D\u540C\u7D27\u95ED\u7A0B\u5EA6\u7684\u903B\u8F91\u51FD\u6570\u76F8\u5E94\u7684\u68AF\u5EA6"),
                React.createElement("img", { src: "../lib/app/static/gate.png" })))),
    React.createElement(Wrapper, { key: 21, header: "优化3 -- 门函数激励函数 实验" },
        React.createElement("ul", { className: "list" },
            React.createElement("li", null, "\u4F7F\u7528\u4E0D\u540C\u903B\u8F91\u51FD\u6570\u7684\u4E58\u6CD5\u4EFB\u52A1\u7684\u5B9E\u9A8C\u3002\u53EF\u4EE5\u770B\u5230\u5927\u7684\u7D27\u95ED\u503C\u7684\u6536\u655B\u6548\u679C\u66F4\u597D"),
            React.createElement("img", { src: "../lib/app/static/gateExp.png" }))),
    React.createElement(Wrapper, { key: 22, header: "优化4 -- 并行计算" },
        React.createElement("ul", { className: "list" },
            React.createElement("li", null, "GPU\u52A0\u901F"),
            React.createElement("li", null, "\u591A\u673A\u5E76\u884C\u52A0\u901F MapReduce"))),
    React.createElement(Wrapper, { key: 23, header: "优化4 -- 并行计算 GPU实验" },
        React.createElement("img", { src: '../lib/app/static/gpu.png' })),
    React.createElement(Wrapper, { key: 24, header: "优化4 -- 并行计算 MapReduce实验" },
        React.createElement("img", { src: '../lib/app/static/multicore.png' })),
    React.createElement(Wrapper, { count: 2, key: 25, header: "改进模型 LSTM-RTRBM" },
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 0 },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["时间序列数据的分析与研究"] },
                React.createElement("li", null, "\u7EF4\u5EA6\u9AD8"),
                React.createElement("li", null, "\u65F6\u5E8F\u76F8\u5173\u6027"),
                React.createElement("li", null,
                    "\u7C7B\u4EBA\u8111\u8BA4\u77E5,\u8BB0\u5FC6\u5355\u5143 ",
                    React.createElement("span", { style: { paddingLeft: '50px' } }, "(\u5706\u5468\u7387)")))),
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn", stagger: 500, duration: 500 }, order: 1 },
            React.createElement("span", { style: { margin: '25px' } }, "3.141"),
            React.createElement("span", { style: { margin: '25px' } }, "5926"),
            React.createElement("span", { style: { margin: '25px' } }, "5358"),
            React.createElement("span", { style: { margin: '25px' } }, "9793"),
            React.createElement("span", { style: { margin: '25px' } }, "2384"),
            React.createElement("span", { style: { margin: '25px' } }, "6264"),
            React.createElement("br", null)),
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn", stagger: 500, duration: 500 }, order: 2 },
            React.createElement("span", { style: { margin: '25px' } }, "3.14159265358979323846264"))),
    React.createElement(Wrapper, { count: 3, key: 26, header: "改进模型 LSTM-RTRBM" },
        React.createElement(ReactPPT_1.Lists, { header: true, lists: ["受限玻尔兹曼机 RBM"] },
            React.createElement(ReactPPT_1.Lists, { lists: ["受物理上能量函数启发，根据能量下降方向计算梯度", "乘积专家系统(Product of Expert)，建模能力;比传统高斯混合模型这种加法平均专家系统(Mixture of Expert)，在高纬度数据建模上更有效"] }),
            React.createElement("img", { src: '../lib/app/static/rbm.png' }))),
    React.createElement(Wrapper, { count: 3, key: 26, header: "改进模型 LSTM-RTRBM" },
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 0 },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["时序模型能力的分析与研究"] })),
        React.createElement(ReactPPT_1.Frame3, { animate: { animation: "transition.bounceUpIn" }, order: 1 },
            React.createElement("div", { style: { border: "solid 1px red", position: 'relative' } },
                React.createElement(ReactPPT_1.Frame3, { order: [2, 3], animate: { animation: "transition.flipBounceXIn" }, animateOut: { animation: "transition.flipBounceYOut" } },
                    React.createElement("div", { style: {
                            position: "absolute", left: "200px", top: '0px', width: '700px',
                            height: '300px', border: 'solid 6px red'
                        } })),
                React.createElement(ReactPPT_1.Frame3, { order: 3, animate: { animation: "transition.flipBounceXIn" } },
                    React.createElement("div", { style: {
                            position: "absolute", left: "20px", bottom: '0px', width: '900px',
                            height: '200px', border: 'solid 6px red'
                        } })),
                React.createElement("img", { style: { width: "900px", height: "500px" }, src: '../lib/app/static/lstm-rtrbm.png' })))),
    React.createElement(Wrapper, { count: 1, key: 27, header: "实验结果" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["小球碰撞", "人类运动捕捉数据实验"] }),
            React.createElement(ReactPPT_1.Frame3, { order: 1, animate: { animation: "transition.perspectiveUpIn" } },
                React.createElement("video", { src: '../lib/app/static/example.MP4', style: { width: '400px' }, controls: true, autoPlay: true, loop: true }, "\u60A8\u7684\u6D4F\u89C8\u5668\u4E0D\u652F\u6301 video \u6807\u7B7E\u3002")))),
    React.createElement(Wrapper, { count: 1, key: 28, header: "实验结果" },
        React.createElement("img", { style: { position: 'absolute', top: '10px', right: 0, height: '90%' }, src: '../lib/app/static/lstm-rtrbm-result.png' }),
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { header: true, lists: ["建模复调音乐"] },
                React.createElement(ReactPPT_1.Lists, { lists: ["MUSE", "JSB"] })),
            React.createElement(ReactPPT_1.Frame3, { order: 1, animate: { animation: "transition.expandIn" } },
                React.createElement("img", { src: '../lib/app/static/result.png' })))),
    React.createElement(Wrapper, { key: 'end', header: "研究成果" },
        React.createElement("ul", { className: "list" },
            React.createElement(ReactPPT_1.Lists, { style: { fontSize: '25px', listStyle: 'none' }, lists: ['[1]	Qi Lyu and Jun Zhu. Revisit Long Short-Term Memory: An Optimization Perspective. In Conference on Neural Information Processing Systems (NIPS) Workshop on Deep Learning and Representation Learning, Montreal, Canada, 2014',
                    '[2]	Qi Lyu, Zhiyong Wu, Jun Zhu, Helen Meng. Modelling High-Dimensional Sequences with LSTM-RTRBM: Application to Polyphonic Music Generation. In Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence (IJCAI 2015), 4138 (EI收录, 检索号: 20155101693661)',
                    '[3]	Qi Lyu, Zhiyong Wu, Jun Zhu. Polyphonic Music Modelling with LSTM-RTRBM. In Proc. of ACM Multimedia, Brisbane, Australia, 2015. (ACM MM 2015) (EI检索，检索号：20161602252616)'
                ] }))),
    React.createElement(Wrapper, { key: 'end', header: " " },
        React.createElement("div", { style: { color: 'blue', margin: '200px auto', textAlign: 'center', lineHeight: '100px' } },
            React.createElement("div", { style: { fontSize: '100px' } }, "Thank You!"),
            React.createElement("div", { style: { fontSize: '100px' } }, decodeURI('Q&A')))),
];
ReactDOM.render(React.createElement(ReactPPT_1.ReactPPT, { content: divs, cur: 0 }), document.querySelector('#content'));
//# sourceMappingURL=index.js.map